type Query {
    armies: [CrusadeArmy!]!
}

type Mutation {
    army(crusadeArmy: CrusadeArmyInput!): CrusadeArmy!
    unit(crusadeUnit: CrusadeUnitInput!, crusadeArmyId: Int!): CrusadeUnit!
}

input CrusadeArmyInput {
    name: String!
    alternateName: String
    id: Int!
    isUsingAlternateName: Boolean
    requisitionPoints: Int
    traitColor: String
    maximumPowerLevel: Int
    detachmentTrait: NameEffectInput
    units: [CrusadeUnitInput]
}

input CrusadeUnitInput {
    id: Int!
    name: String!
    alternateName: String
    agendaXp: Int!
    battleParticipation: Int!
    experienceLoss: Int
    kills: Int!
    markedForGreatness: Int!
    notes: String
    powerLevel: Int!
    sequenceNumber: Int
    relic: NameEffectInput
    battleScars: [NameEffectInput]
    warlordTrait: NameEffectInput
    battleHonours: [BattleHonourInput]
    otherTraits: [OtherTraitInput]
}

input BattleHonourInput {
    id: Int
    crusadePoints: Int!
    battleTrait: NameEffectInput
    rank: String!
}

input OtherTraitInput {
    id: Int!
    name: String
    nameEffects: [NameEffectInput]
}

input NameEffectInput {
    id: Int
    name: String
    effect: String
}

type CrusadeArmy {
    name: String!
    alternateName: String
    battleRosterUnitIds: [Int]
    id: Int!
    isUsingAlternateName: Boolean!
    requisitionPoints: Int
    traitColor: String
    maximumPowerLevel: Int
    detachmentTrait: NameEffect
    units: [CrusadeUnit]
}

type CrusadeUnit {
    id: Int!
    name: String!
    alternateName: String
    agendaXp: Int!
    battleParticipation: Int!
    experienceLoss: Int
    kills: Int!
    markedForGreatness: Int!
    notes: String
    powerLevel: Int!
    relic: NameEffect
    warlordTrait: NameEffect
    sequenceNumber: Int
    otherTraits: [OtherTrait]
    battleHonours: [BattleHonour]
    battleScars: [NameEffect]
}

type BattleHonour {
    id: Int!
    crusadePoints: Int!
    battleTrait: NameEffect
    rank: String!
}

type OtherTrait {
    id: Int!
    name: String
    nameEffects: [NameEffect]
}

type NameEffect {
    id: Int!
    name: String
    effect: String
}

