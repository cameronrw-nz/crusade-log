// 1
datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

// 2
generator client {
    provider = "prisma-client-js"
}

model CrusadeArmy {
    id                Int           @id @default(autoincrement())
    alternateName     String?
    requisitionPoints Int
    traitColor        String
    maximumPowerLevel Int
    createdAt         DateTime      @default(now())
    name              String        @default("")
    detachmentTrait   NameEffect?   @relation(fields: [detachmentTraitId], references: [id])
    detachmentTraitId Int?
    units             CrusadeUnit[]
}

model NameEffect {
    id           Int            @id @default(autoincrement())
    name         String
    effect       String
    CrusadeArmy  CrusadeArmy[]
    Relic        CrusadeUnit[]  @relation("relic")
    WarlordTrait CrusadeUnit[]  @relation("warlordTrait")
    BattleHonour BattleHonour[] @relation("battleTrait")
    OtherTrait   OtherTrait?    @relation("otherTraitNameEffect", fields: [otherTraitId], references: [id])
    otherTraitId Int?
    BattleScar   CrusadeUnit?   @relation("battleScars", fields: [battleScarId], references: [id])
    battleScarId Int?
}

model CrusadeUnit {
    id                  Int            @id @default(autoincrement())
    name                String
    alternateName       String?
    agendaXp            Int
    battleParticipation Int
    experienceLoss      Int
    kills               Int
    markedForGreatness  Int
    notes               String?
    powerLevel          Int
    relic               NameEffect?    @relation(name: "relic", fields: [relicId], references: [id])
    relicId             Int?
    sequenceNumber      Int
    warlordTrait        NameEffect?    @relation(name: "warlordTrait", fields: [warlordTraitId], references: [id])
    warlordTraitId      Int?
    CrusadeArmy         CrusadeArmy?   @relation(fields: [crusadeArmyId], references: [id])
    crusadeArmyId       Int?
    battleHonours       BattleHonour[]
    OtherTrait          OtherTrait[]   @relation("otherTrait")
    BattleScars         NameEffect[]   @relation("battleScars")
}

model BattleHonour {
    id            Int          @id @default(autoincrement())
    crusadePoints Int
    battleTrait   NameEffect?  @relation("battleTrait", fields: [battleTraitId], references: [id])
    battleTraitId Int?
    rank          String
    CrusadeUnit   CrusadeUnit? @relation(fields: [crusadeUnitId], references: [id])
    crusadeUnitId Int?
}

model OtherTrait {
    id          Int           @id @default(autoincrement())
    name        String
    nameEffects NameEffect[]  @relation("otherTraitNameEffect")
    CrusadeUnit CrusadeUnit[] @relation("otherTrait")
}
